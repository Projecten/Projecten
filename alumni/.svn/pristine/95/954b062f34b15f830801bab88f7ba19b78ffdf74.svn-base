<?php

if (!defined('BASEPATH'))
    exit('No direct script access allowed');

class Admin extends CI_Controller {

// +----------------------------------------------------------
// | Alumni
// +----------------------------------------------------------
// | Thomas More - 2TI2 - 2012-2013
// +----------------------------------------------------------
// | Admin Controller
// |
// +----------------------------------------------------------
// | Team 28
// +----------------------------------------------------------

    public function __construct() {
        parent::__construct();
//librabries en helpers laden
        $this->load->library('pagination');
        $this->load->helper('notation');

//url beveiligen
        if (!$this->authex->loggedIn()) {
            redirect('home/login');
        } else {
            $user = $this->authex->getUserInfo();
        }
    }

    public function alumniZoekenMail() {
//recht ophalen
        $recht = $this->session->userdata('recht');
        ;
//indien recht gelijk is aan administrator
        if ($recht == 3) {
            $data['title'] = 'Alumni zoeken - Admin';
            $data['recht'] = $this->session->userdata('recht');
            $data['username'] = $this->session->userdata('username');

            $this->load->model('alumnus_model');

            $data['alumni'] = $this->alumnus_model->getAll();

            $partials = array('header' => 'main_header', 'content' => 'admin/alumnizoeken_mail', 'footer' => 'main_footer', 'menu' => 'main_menu', 'sidebar' => 'main_sidebar', 'login' => 'main_login', 'nieuws' => 'main_nieuws');
            $this->template->load('main_master', $partials, $data);
        } else {
//verwijzen naar function fouteUser();
            $this->fouteUser();
        }
    }

    public function controleDelete() {
//recht ophalen
        $recht = $this->session->userdata('recht');
        ;
//indien recht gelijk is aan administrator
        if ($recht == 3) {
            $id = $this->input->get(mysql_real_escape_string('id'));

            $this->load->model('evenement_model');
            echo $this->evenement_model->delete($id);
        } else {
//verwijzen naar function fouteUser();
            $this->fouteUser();
        }
    }

    //verwijderen van evenementen
    public function delete() {
//recht ophalen
        $recht = $this->session->userdata('recht');
        ;
//id van evenement ophalen
        $id = $this->input->get(mysql_real_escape_string('id'));
//indien recht gelijk is met administrator
        if ($recht == 3) {
            $this->load->model('evenement_model');
//indien een evenement kan verwijdert worden
            if ($this->evenement_model->delete($id)) {
//bericht: succes
                $data['message'] = 'Het evenement werd succesvol verwijderd.';
            } else {
//bericht: niet succes
                $data['message'] = 'Het evenement kan niet verwijderd worden.';
            }
//deze gegevens meegeven
            $data['title'] = 'Alumni verwijderen - Alumni';
            $data['recht'] = $recht;
            $data['username'] = $this->session->userdata('username');
            $data['vorigePagina'] = 'index.php/alumnus/evenementenBekijken';

//            $partials = array('header' => 'main_header', 'content' => 'user/evenementenZoeken', 'footer' => 'main_footer', 'menu' => 'main_menu', 'sidebar' => 'main_sidebar', 'login' => 'main_login', 'nieuws' => 'main_nieuws');
//            $this->template->load('main_master', $partials, $data);
            redirect('user/evenementenZoeken');
        } else {
//verwijzen naar function fouteUser();
            $this->fouteUser();
        }
    }

    //naar pagina evenement toevoegen gaan
    public function evenementAanpassen($id) {
//recht ophalen
        $recht = $this->session->userdata('recht');
        ;
//indien recht gelijk is aan administrator
        if ($recht != 1) {
            $data['title'] = 'Evenement aanpassen - Admin';
            $data['recht'] = $this->session->userdata('recht');
            $data['username'] = $this->session->userdata('username');


            $this->load->model('plaats_model');

// locaties in array zetten om door te geven aan de pagina
            foreach ($this->plaats_model->getAll() as $plaats) {
                $plaatsen[$plaats->id] = $plaats->locatie;
            }
            $data['plaatsen'] = $plaatsen;

//nieuw evenement object aanmaken
            $this->load->model('evenement_model');
            $data['evenement'] = $this->evenement_model->get($id);

//om te kiezen tussen evenement toevoegen of bewerken
            $data['actie'] = 'Bewerken';

            $partials = array('header' => 'main_header', 'content' => 'admin/evenementAanpassen', 'footer' => 'main_footer', 'menu' => 'main_menu', 'sidebar' => 'main_sidebar', 'login' => 'main_login', 'nieuws' => 'main_nieuws');
            $this->template->load('main_master', $partials, $data);
        } else {
//verwijzen naar function fouteUser();
            $this->fouteUser();
        }
    }

    //naar pagina evenement toevoegen gaan
    public function evenementToevoegen() {
//recht ophalen
        $recht = $this->session->userdata('recht');
        ;
//indien recht gelijk is aan administrator
        if ($recht == 3) {
            $data['title'] = 'Evenement toevoegen - Admin';
            $data['recht'] = $this->session->userdata('recht');
            $data['username'] = $this->session->userdata('username');

            $this->load->model('plaats_model');

// locaties in array zetten om door te geven aan de pagina
            $plaatsen[0] = "--Selecteer een plaats--";
            foreach ($this->plaats_model->getAll() as $plaats) {
                $plaatsen[$plaats->id] = $plaats->locatie;
            }
            $data['plaatsen'] = $plaatsen;

//nieuw evenement object aanmaken
            $this->load->model('evenement_model');
            $data['evenement'] = $this->evenement_model->newObject();

//om te kiezen tussen evenement toevoegen of bewerken
            $data['actie'] = 'Toevoegen';

            $partials = array('header' => 'main_header', 'content' => 'admin/evenementToevoegen', 'footer' => 'main_footer', 'menu' => 'main_menu', 'sidebar' => 'main_sidebar', 'login' => 'main_login', 'nieuws' => 'main_nieuws');
            $this->template->load('main_master', $partials, $data);
        } else {
//verwijzen naar function fouteUser();
            $this->fouteUser();
        }
    }

    public function fouteUser() {
//indien er een foute user naar de url gaat via adresbalk, deze gegevens tonen
        $data['title'] = 'Fout - project Alumni';
        $data['recht'] = $this->session->userdata('recht');
        $data['username'] = $this->session->userdata('username');
        ;
        $data['message'] = 'U bent niet bevoegd om deze pagina te bezoeken.';
//template laden met de juiste inhoud
        $partials = array('header' => 'main_header', 'content' => 'user/fout_message', 'footer' => 'main_footer', 'menu' => 'main_menu', 'sidebar' => 'main_sidebar', 'login' => 'main_login', 'nieuws' => 'main_nieuws');
        $this->template->load('main_master', $partials, $data);
    }

    public function index() {
//recht ophalen
        $recht = $this->session->userdata('recht');
//indien recht gelijk is aan administrator
        if ($recht == 3) {
            $data['title'] = 'Administrator';
            $data['recht'] = $recht;
            $data['username'] = $this->session->userdata('username');
//template laden met de juiste inhoud
            $partials = array('header' => 'main_header', 'content' => 'home_index', 'footer' => 'main_footer', 'menu' => 'main_menu', 'sidebar' => 'main_sidebar', 'login' => 'main_login', 'nieuws' => 'main_nieuws');
            $this->template->load('main_master', $partials, $data);
        } else {
//verwijzen naar function fouteUser();
            $this->fouteUser();
        }
    }

//bewerken van evenement
    public function update() {
//recht ophalen
        $recht = $this->session->userdata('recht');
        ;
//indien recht gelijk is aan administrator
        if ($recht != 1) {
//gegevens ophalen
            $evenement->id = $this->input->post(mysql_real_escape_string('id'));
            $evenement->naam = $this->input->post(mysql_real_escape_string('naam'));
            $evenement->omschrijving = $this->input->post(mysql_real_escape_string('omschrijving'));
            $evenement->plaatsId = $this->input->post(mysql_real_escape_string('plaats'));
            $evenement->begintijd = toYYYYMMDD($this->input->post('datum') . ' ' . str_replace("u", ":", $this->input->post('startuur')) . ':00');
            $evenement->deadlineInschrijving = toYYYYMMDD($this->input->post('deadlineInschrijving'));

            $this->load->model('evenement_model');

            $data['title'] = 'Evenementen bekijken - Alumni';
            $data['recht'] = $this->session->userdata('recht');
            $data['username'] = $this->session->userdata('username');
//indien er een evenement id niet besta
            if ($evenement->id == 0) {
//invoegen van een evenement
                $this->evenement_model->insert($evenement);

                $this->load->model('uitgenodigd_model');
                $data['evenement'] = $this->evenement_model->getWithPlaats($this->input->post(mysql_real_escape_string('plaats')));

                $partials = array('header' => 'main_header', 'content' => 'user/evenementendetails', 'footer' => 'main_footer', 'menu' => 'main_menu', 'sidebar' => 'main_sidebar', 'login' => 'main_login', 'nieuws' => 'main_nieuws');
                $this->template->load('main_master', $partials, $data);
            } else {
//bewerken van een evenement
                $this->evenement_model->update($evenement);
                redirect('alumnus/evenementdetail/' . $evenement->id);
            }

//Terug naar overzicht
        } else {
//verwijzen naar function fouteUser();
            $this->fouteUser();
        }
    }

}

/* End of file home.php */
/* Location: ./application/controllers/home.php */


